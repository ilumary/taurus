@misc{rfc8446,
    series =    {Request for Comments},
    number =    8446,
    howpublished =  {RFC 8446},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC8446},
    url =       {https://www.rfc-editor.org/info/rfc8446},
    author =    {Eric Rescorla},
    title =     {{The Transport Layer Security (TLS) Protocol Version 1.3}},
    pagetotal = 160,
    year =      2018,
    month =     aug,
    abstract =  {This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery. This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.},
}

@misc{rfc8999,
    series =    {Request for Comments},
    number =    8999,
    howpublished =  {RFC 8999},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC8999},
    url =       {https://www.rfc-editor.org/info/rfc8999},
    author =    {Martin Thomson},
    title =     {{Version-Independent Properties of QUIC}},
    pagetotal = 9,
    year =      2021,
    month =     may,
    abstract =  {This document defines the properties of the QUIC transport protocol that are common to all versions of the protocol.},
}

@misc{rfc9000,
    series =    {Request for Comments},
    number =    9000,
    howpublished =  {RFC 9000},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC9000},
    url =       {https://www.rfc-editor.org/info/rfc9000},
    author =    {Jana Iyengar and Martin Thomson},
    title =     {{QUIC: A UDP-Based Multiplexed and Secure Transport}},
    pagetotal = 151,
    year =      2021,
    month =     may,
    abstract =  {This document defines the core of the QUIC transport protocol. QUIC provides applications with flow-controlled streams for structured communication, low-latency connection establishment, and network path migration. QUIC includes security measures that ensure confidentiality, integrity, and availability in a range of deployment circumstances. Accompanying documents describe the integration of TLS for key negotiation, loss detection, and an exemplary congestion control algorithm.},
}

@misc{rfc9001,
    series =    {Request for Comments},
    number =    9001,
    howpublished =  {RFC 9001},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC9001},
    url =       {https://www.rfc-editor.org/info/rfc9001},
    author =    {Martin Thomson and Sean Turner},
    title =     {{Using TLS to Secure QUIC}},
    pagetotal = 52,
    year =      2021,
    month =     may,
    abstract =  {This document describes how Transport Layer Security (TLS) is used to secure QUIC.},
}

@misc{rfc9002,
    series =    {Request for Comments},
    number =    9002,
    howpublished =  {RFC 9002},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC9002},
    url =       {https://www.rfc-editor.org/info/rfc9002},
    author =    {Jana Iyengar and Ian Swett},
    title =     {{QUIC Loss Detection and Congestion Control}},
    pagetotal = 42,
    year =      2021,
    month =     may,
    abstract =  {This document describes loss detection and congestion control mechanisms for QUIC.},
}

@misc{rfc9114,
    series =    {Request for Comments},
    number =    9114,
    howpublished =  {RFC 9114},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC9114},
    url =       {https://www.rfc-editor.org/info/rfc9114},
    author =    {Mike Bishop},
    title =     {{HTTP/3}},
    pagetotal = 57,
    year =      2022,
    month =     jun,
    abstract =  {The QUIC transport protocol has several features that are desirable in a transport for HTTP, such as stream multiplexing, per-stream flow control, and low-latency connection establishment. This document describes a mapping of HTTP semantics over QUIC. This document also identifies HTTP/2 features that are subsumed by QUIC and describes how HTTP/2 extensions can be ported to HTTP/3.},
}

@misc{rfc9369,
    series =    {Request for Comments},
    number =    9369,
    howpublished =  {RFC 9369},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC9369},
    url =       {https://www.rfc-editor.org/info/rfc9369},
    author =    {Martin Duke},
    title =     {{QUIC Version 2}},
    pagetotal = 14,
    year =      2023,
    month =     may,
    abstract =  {This document specifies QUIC version 2, which is identical to QUIC version 1 except for some trivial details. Its purpose is to combat various ossification vectors and exercise the version negotiation framework. It also serves as a template for the minimum changes in any future version of QUIC. Note that "version 2" is an informal name for this proposal that indicates it is the second version of QUIC to be published as a Standards Track document. The protocol specified here uses a version number other than 2 in the wire image, in order to minimize ossification risks.},
}

@misc{rfc8312,
    series =    {Request for Comments},
    number =    8312,
    howpublished =  {RFC 8312},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC8312},
    url =       {https://www.rfc-editor.org/info/rfc8312},
    author =    {Injong Rhee and Lisong Xu and Sangtae Ha and Alexander Zimmermann and Lars Eggert and Richard Scheffenegger},
    title =     {{CUBIC for Fast Long-Distance Networks}},
    pagetotal = 18,
    year =      2018,
    month =     feb,
    abstract =  {CUBIC is an extension to the current TCP standards. It differs from the current TCP standards only in the congestion control algorithm on the sender side. In particular, it uses a cubic function instead of a linear window increase function of the current TCP standards to improve scalability and stability under fast and long-distance networks. CUBIC and its predecessor algorithm have been adopted as defaults by Linux and have been used for many years. This document provides a specification of CUBIC to enable third-party implementations and to solicit community feedback through experimentation on the performance of CUBIC.},
}

@misc{rfc6582,
    series =    {Request for Comments},
    number =    6582,
    howpublished =  {RFC 6582},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC6582},
    url =       {https://www.rfc-editor.org/info/rfc6582},
    author =    {Andrei Gurtov and Tom Henderson and Sally Floyd and Yoshifumi Nishida},
    title =     {{The NewReno Modification to TCP's Fast Recovery Algorithm}},
    pagetotal = 16,
    year =      2012,
    month =     apr,
    abstract =  {RFC 5681 documents the following four intertwined TCP congestion control algorithms: slow start, congestion avoidance, fast retransmit, and fast recovery. RFC 5681 explicitly allows certain modifications of these algorithms, including modifications that use the TCP Selective Acknowledgment (SACK) option (RFC 2883), and modifications that respond to "partial acknowledgments" (ACKs that cover new data, but not all the data outstanding when loss was detected) in the absence of SACK. This document describes a specific algorithm for responding to partial acknowledgments, referred to as "NewReno". This response to partial acknowledgments was first proposed by Janey Hoe. This document obsoletes RFC 3782. {[}STANDARDS-TRACK{]}},
}

@misc{rfc9406,
    series =    {Request for Comments},
    number =    9406,
    howpublished =  {RFC 9406},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC9406},
    url =       {https://www.rfc-editor.org/info/rfc9406},
    author =    {Praveen Balasubramanian and Yi Huang and Matt Olson},
    title =     {{HyStart++: Modified Slow Start for TCP}},
    pagetotal = 9,
    year =      2023,
    month =     may,
    abstract =  {This document describes HyStart++, a simple modification to the slow start phase of congestion control algorithms. Slow start can overshoot the ideal send rate in many cases, causing high packet loss and poor performance. HyStart++ uses increase in round-trip delay as a heuristic to find an exit point before possible overshoot. It also adds a mitigation to prevent jitter from causing premature slow start exit.},
}

@misc{rfc6691,
    series =    {Request for Comments},
    number =    6691,
    howpublished =  {RFC 6691},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC6691},
    url =       {https://www.rfc-editor.org/info/rfc6691},
    author =    {David Borman},
    title =     {{TCP Options and Maximum Segment Size (MSS)}},
    pagetotal = 9,
    year =      2012,
    month =     jul,
    abstract =  {This memo discusses what value to use with the TCP Maximum Segment Size (MSS) option, and updates RFC 879 and RFC 2385. This document is not an Internet Standards Track specification; it is published for informational purposes.},
}

@inproceedings{tcp-adoption,
  author={Lee, DongJin and Carpenter, Brian E. and Brownlee, Nevil},
  booktitle={2010 Fifth International Conference on Internet Monitoring and Protection}, 
  title={Observations of UDP to TCP Ratio and Port Numbers}, 
  year={2010},
  volume={},
  number={},
  pages={99-104},
  keywords={Telecommunication traffic;Streaming media;Internet;Traffic control;Economic forecasting;IP networks;Computerized monitoring;Protection;Computer science;Protocols;network traffic;observation;ratio;port number},
  doi={10.1109/ICIMP.2010.20}
}

@misc{quic_wg_history,
  title = {QUIC working group history},
  howpublished = {\url{https://datatracker.ietf.org/wg/quic/history/}},
  note = {Accessed: 2024-02-14}
}

@inproceedings{quic_security_1,
  author={Saverimoutou, Antoine and Mathieu, Bertrand and Vaton, Sandrine},
  booktitle={2017 IEEE Symposium on Computers and Communications (ISCC)}, 
  title={Which secure transport protocol for a reliable HTTP/2-based web service: TLS or QUIC?}, 
  year={2017},
  volume={},
  number={},
  pages={879-884},
  keywords={Servers;Protocols;Encryption;DH-HEMTs;Google;Security;Encryption;TLS;QUIC;HTTP/2},
  doi={10.1109/ISCC.2017.8024637}
}

@INPROCEEDINGS{quic_security_2,
  author={Lychev, Robert and Jero, Samuel and Boldyreva, Alexandra and Nita-Rotaru, Cristina},
  booktitle={2015 IEEE Symposium on Security and Privacy}, 
  title={How Secure and Quick is QUIC? Provable Security and Performance Analyses}, 
  year={2015},
  volume={},
  number={},
  pages={214-231},
  keywords={Protocols;Servers;Encryption;IP networks;Public key},
  doi={10.1109/SP.2015.21}
}

@inproceedings{quic_security_3,
author = {Reen, Gaganjeet Singh and Rossow, Christian},
title = {DPIFuzz: A Differential Fuzzing Framework to Detect DPI Elusion Strategies for QUIC},
year = {2020},
isbn = {9781450388580},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3427228.3427662},
doi = {10.1145/3427228.3427662},
booktitle = {Proceedings of the 36th Annual Computer Security Applications Conference},
pages = {332–344},
numpages = {13},
keywords = {QUIC, Protocol Fuzzing, Differential Fuzzing, DPI Elusion},
location = {, Austin, USA, },
series = {ACSAC '20}
}

@misc{rustls,
  title = {Rustls Library},
  howpublished = {\url{https://github.com/rustls/rustls/}},
  note = {Accessed: 2024-02-27}
}

@misc{octets,
  title = {Octets Library},
  howpublished = {\url{https://github.com/cloudflare/quiche/tree/master/octets/}},
  note = {Accessed: 2024-02-27}
}

@misc{rcgen,
  title = {Rcgen Library},
  howpublished = {\url{https://github.com/rustls/rcgen/}},
  note = {Accessed: 2024-02-27}
}

@misc{ring,
  title = {Ring Library},
  howpublished = {\url{https://github.com/briansmith/ring/}},
  note = {Accessed: 2024-02-27}
}

@misc{ccgraphic,
  title = {CUBIC and HyStart++ Support in quiche},
  howpublished = {\url{https://blog.cloudflare.com/cubic-and-hystart-support-in-quiche}},
  note = {Accessed: 2024-03-11}
}
